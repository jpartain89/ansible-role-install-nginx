---

- name: Include Ubuntu Vars
  include_vars: ubuntu.yml
  when: ansible_distribution == "Ubuntu"

- name: Include Debian Vars
  include_vars: debian.yml
  when: ansible_os_family == "Debian"

- name: Add Backports apt repo for CheckInstall
  apt_repository:
    repo: "deb http://deb.debian.org/debian buster-backports main contrib non-free"
    state: present
  become: true
  when: ansible_distribution_release == "buster"

- name: Create Master tmp Directory
  file:
    path: /tmp/nginx
    owner: "{{ ansible_user_uid }}"
    group: "{{ ansible_user_gid }}"
    state: directory
    mode: 0775
  become: true

- name: Create Master tmp Directory | Localhost
  file:
    path: /tmp/nginx
    owner: "{{ ansible_user_uid }}"
    group: "{{ ansible_user_gid }}"
    state: directory
    mode: 0775
  delegate_to: localhost
  become: true

- name: Download and Run Adding Any Apt Repos
  get_url:
    url: "{{ item }}"
    dest: "/tmp/nginx/"
  with_items:
    - "{{ nginx_apt_extras }}"
  register: _nginx_apt_extras_tmp
  become: true
  when: nginx_apt_extras

- name: Run Downloaded Scripts
  command: 'bash "{{ item.dest }}"'
  become: true
  when: nginx_apt_extras
  with_items:
    - "{{ _nginx_apt_extras_tmp.results }}"

- name: Install Required PreRequisites - apt
  apt:
    name: "{{ nginx_prerequisites }}"
    state: present
    update_cache: yes
    cache_valid_time: 32400
  become: true

- name: Install Any Extra Programs Needed
  apt:
    name: "{{ nginx_extra_prerequisites | bool }}"
    state: present
    update_cache: yes
    cache_valid_time: 32400
  become: true
  when: nginx_extra_prerequisites

- name: Confirm /etc/nginx Exists
  stat:
    path: /etc/nginx
  register: _nginx_config
  become: true

- name: Move Existing NGINX Config Directory
  command: 'mv /etc/nginx /etc/nginx.bak'
  register: _nginx_move
  when:
    - _nginx_config.stat.exists
    - not _nginx_config.stat.islnk
  become: true
  failed_when: false

- name: Remove NGINX Config Link
  file:
    path: "/etc/nginx"
    state: absent
  become: true
  when:
    - _nginx_config.stat.exists
    - _nginx_config.stat.islnk

- name: Create NGINX Directories
  file:
    path: "{{ item }}"
    owner: root
    group: root
    state: directory
    mode: 0775
  with_items:
    - nginx_directories
  become: true

- name: Test if PCRE is Installed
  command: 'dpkg -l pcre'
  args:
    warn: no
  register: _pcre_installed
  failed_when: _pcre_installed.rc > 1
  changed_when: no
  become: true

- name: Run PCRE Steps
  include_tasks: pcre.yml
  when: _pcre_installed.rc != 0

- name: Test if ZLIB is Installed
  command: 'dpkg -l zlib'
  args:
    warn: no
  register: _zlib_installed
  failed_when: _zlib_installed.rc > 1
  changed_when: no
  become: true

- name: Run ZLIB Steps
  include_tasks: zlib.yml
  when: _zlib_installed.rc != 0

- name: Test if OpenSSL is Installed
  command: 'dpkg -l openssl'
  args:
    warn: no
  register: _openssl_installed
  failed_when: _openssl_installed.rc > 1
  changed_when: no
  become: true

- name: Run OpenSSL Steps
  include_tasks: openssl.yml
  when: _openssl_installed.rc != 0

- name: Git Clone Any Additional Static Modules
  git: # noqa 401
    repo: "{{ item.address }}"
    dest: "/tmp/nginx/{{ item.name }}"
    clone: yes
    update: yes
    recursive: yes
  with_items:
    - "{{ nginx_module }}"
  failed_when: false
  become: true

- name: Run NGINX Steps
  include_tasks: nginx.yml

- name: Move NGINX Config Directory Back
  command: 'mv /etc/nginx.bak /etc/nginx'
  when:
    - _nginx_config.stat.exists
    - not _nginx_config.stat.islnk
  become: true
  failed_when: false

- name: ReLink NGINX
  file:
    src: "{{ nginx_config_loc }}"
    dest: /etc/nginx
    state: link
    owner: "{{ ansible_user_uid }}"
    group: "{{ ansible_user_gid }}"
  become: true
  when:
    - _nginx_config.stat.exists
    - _nginx_config.stat.islnk
  failed_when: false
