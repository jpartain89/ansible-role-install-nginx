---

- name: Install-NGINX | main.yml | Include Ubuntu Vars
  ansible.builtin.include_vars: ubuntu.yml
  when: ansible_facts['distribution'] == "Ubuntu"

- name: Install-NGINX | main.yml | Include Debian Vars
  ansible.builtin.include_vars: debian.yml
  when: ansible_facts['os_family'] == "Debian"

- name: Install-NGINX | main.yml | Create NGINX Group
  ansible.builtin.group:
    name: nginx
    state: present
    system: true

- name: Install-NGINX | main.yml | Create NGINX Users
  ansible.builtin.user:
    name: nginx
    group: nginx
    system: true
    state: present
    groups: "{{ item }}"
  with_items:
    - "{{ nginx_users_groups }}"
  become: true

- name: Install-NGINX | main.yml | Check Versions
  ansible.builtin.include_tasks: check_version.yml
  when: nginx_check_version == "true"

- name: Install-NGINX | main.yml | Add Backports apt repo for CheckInstall
  ansible.builtin.apt_repository:
    repo: "deb http://deb.debian.org/debian buster-backports main contrib falsen-free"
    state: present
  become: true
  when:
    - ansible_facts['distribution_release'] == "buster"
    - ansible_facts['lsb']['id'] != "Raspbian"

- name: Install-NGINX | main.yml | Create Master tmp Directory
  ansible.builtin.file:
    path: /tmp/nginx
    owner: "{{ ansible_user_uid | int }}"
    group: "{{ ansible_user_gid | int }}"
    state: directory
    mode: "0775"
  become: true

- name: Install-NGINX | main.yml | Create Master tmp Directory | Localhost
  ansible.builtin.file:
    path: /tmp/nginx
    owner: "{{ ansible_user_uid | int }}"
    group: "{{ ansible_user_gid | int }}"
    state: directory
    mode: "0775"
  delegate_to: localhost
  become: true

- name: Install-NGINX | main.yml | Install Required PreRequisites - apt
  ansible.builtin.apt:
    name: "{{ nginx_prerequisites }}"
    state: present
    update_cache: true
    cache_valid_time: 32400
  become: true
  failed_when: false

- name: Install-NGINX | main.yml | Install Any Extra Programs Needed
  ansible.builtin.apt:
    name: "{{ nginx_extra_prerequisites }}"
    state: present
    update_cache: true
    cache_valid_time: 32400
  become: true
  failed_when: false

- name: Install-NGINX | main.yml | Confirm /etc/nginx Exists
  ansible.builtin.stat:
    path: /etc/nginx
  register: _nginx_config
  become: true

- name: Install-NGINX | main.yml | Remove NGINX Config Link
  ansible.builtin.file:
    path: "/etc/nginx"
    state: absent
  become: true
  when:
    - _nginx_config.stat.exists

- name: Install-NGINX | main.yml | Create NGINX Directories
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
    state: directory
    mode: "0775"
  with_items:
    - "{{ nginx_directories }}"
  become: true

- name: Install-NGINX | main.yml | Grab Current PCRE Version
  ansible.builtin.package_facts:
    manager: auto
  become: true

- name: Debug pcre2_facts
  ansible.builtin.set_fact:
    _pcre2_facts: "{{ ansible_facts.packages['pcre2-utils'][0].version }}"
    _zlib_facts: "{{ ansible_facts.packages['zlib1g'][0].version }}"
    _openssl_facts: "{{ ansible_facts.packages['openssl'][0].version }}"
  when: "'pcre2-utils' in ansible_facts.packages"

- name: Install-NGINX | main.yml | Run PCRE Steps
  ansible.builtin.include_tasks: pcre.yml
  when: _pcre2_facts != pcre_version

- name: Install-NGINX | main.yml | Run ZLIB Steps
  ansible.builtin.include_tasks: zlib.yml
  when: _zlib_facts != zlib_version

#- name: Install-NGINX | main.yml | Run OpenSSL Steps
#  ansible.builtin.include_tasks: openssl.yml
#  when: _openssl_facts != openssl_version

- name: Install-NGINX | main.yml | Git Clone Any Additional Static Modules
  ansible.builtin.git: # noqa 401
    repo: "{{ item.address }}"
    dest: "/tmp/nginx/{{ item.name }}"
    clone: true
    update: true
    recursive: true
  with_items:
    - "{{ nginx_module }}"
    - "{{ nginx_module_nginx }}"
  failed_when: false
  become: true

- name: Install-NGINX | main.yml | Run NGINX Steps
  ansible.builtin.include_tasks: nginx.yml

- name: Install-NGINX | main.yml | ReLink NGINX
  ansible.builtin.file:
    src: "{{ nginx_config_loc }}"
    dest: /etc/nginx
    state: link
    owner: "{{ nginx_user }}"
    group: "{{ nginx_group }}"
  become: true
  when:
    - _nginx_config.stat.exists
    - _nginx_config.stat.islnk
  failed_when: false
